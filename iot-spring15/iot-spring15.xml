<?xml version="1.0" encoding="UTF-8"?>
<?hotspot layout-path="hotspot/hotspot/layout" ?>
<?hotspot kilauea-path="hotspot/kilauea" ?>
<?hotspot layout="siemens" ?>
<hotspot xmlns="http://dret.net/xmlns/hotspot/1" xmlns:hotspot="http://dret.net/xmlns/hotspot/1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://dret.net/xmlns/hotspot/1 hotspot/hotspot/schemas/hotspot.xsd">
	<configuration>
		<link subsections="yes" bookmarks="yes" versions="iot-spring15.xml" home="./" help="quick" contents="./" author="http://dret.net/netdret/"/>
		<paths img="img" listing="src"/>
		<outline count-text=" [*]" count-depth="all"/>
		<hyperlink extra=""/>
		<extension file="html" link=""/>
		<counter separator=":&#160;"/>
		<kilauea xmlns="http://xmlns.sharpeleven.net/kilauea">
			<plugins>
				<touch/>
			</plugins>
		</kilauea>
	</configuration>
	<license uri="http://creativecommons.org/licenses/by/3.0/" short="CC 3.0">
		<div class="license">
			<p><a rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/"><img alt="Creative Commons License" src="hotspot/hotspot/layout/ischool/ischool/somerights20.png" border="0" height="31" width="88"/></a></p>
			<p><a class="outlink" rel="license" title="view full text of license" href="http://creativecommons.org/licenses/by/3.0/">This work is licensed under a CC<br/>Attribution 3.0 Unported License</a></p>
		</div>
	</license>
	<title short="IoT"><a href="./" title="Course Homepage">Internet of Things: Foundations and Applications</a><br/>Spring 2015 &#x2014; INFO 290 (CCN 41607)</title>
	<author>Simon Mayer, Florian Michahelles, and <a href="http://dret.net/netdret/">Erik Wilde</a></author>
	<affiliation><a href="http://www.siemens.com/">Siemens</a> <a href="http://www.usa.siemens.com/en/about_us/research/web-of-things.htm">Web of Things Research Group</a></affiliation>
	<date short="Spring 2015">Spring Semester 2015</date>
	<copyright>2015 Simon Mayer, Florian Michahelles, and Erik Wilde</copyright>
	<toc name="toc.html">
		<table rules="all" cellspacing="0" cellpadding="5" width="100%">
			<thead>
				<tr>
					<th valign="bottom">Lecture Date</th>
					<th valign="bottom">Subject</th>
					<th valign="bottom">Lecture Slides</th>
					<th valign="bottom">Assigned Reading</th>
					<th valign="bottom"><a href="https://bcourses.berkeley.edu/courses/1293124/assignments">Assignment (due&#160;date)</a></th>
					<th valign="bottom">Additional Resources</th>
				</tr>
			</thead>
			<tbody>
				<hotspot:for-each-presentation>
					<tr class="vevent">
						<td align="right" valign="top"><hotspot:date/></td>
						<td valign="top">
							<hotspot:if-toc class="author">
								<span class="guest">Guest Lecture by <hotspot:toc class="author"/> : </span>
							</hotspot:if-toc>
							<b><span class="summary"><hotspot:title/></span><span class="toggle">:</span></b> <span class="toggle"><span class="description"><hotspot:toc class="abstract"/></span></span>
							<div style="display : none">
								<span class="dtstart"><hotspot:date/>T09:00</span>
								<span class="dtend"><hotspot:date/>T10:30</span>
								<span class="location">205 South Hall, UC Berkeley</span>
							</div>
						</td>
						<td align="center"><hotspot:presentation-link title="Lecture Slides"><hotspot:title form="short"/></hotspot:presentation-link> <span class="toggle"><hotspot:slides>(*&#160;Slides)</hotspot:slides></span></td>
						<td align="center"><hotspot:toc class="reading"/></td>
						<td align="center"><hotspot:toc class="assignment"/></td>
						<td align="center"><hotspot:toc class="resources"/></td>
					</tr>
				</hotspot:for-each-presentation>
			</tbody>
		</table>
	</toc>
	<presentation id="intro">
		<title short="Introduction">Overview and Introduction</title>
		<date>2015-01-23</date>
		<toc class="resources"><a href="https://bcourses.berkeley.edu/courses/1293124" title="Course Site on bCourses">bCourses</a>&#160;· <a href="http://www.usa.siemens.com/en/about_us/research/web-of-things.htm">WoT Research Group</a></toc>
		<toc class="abstract">In this introductory lecture we give a brief overview of the course's subject and organization. We discuss the course content by presenting the syllabus, and structuring it into the three main topics of technical, business, and societal themes. Organizational issues about the course include lectures, readings, lab time, assignments, and grading.</toc>
		<slide>
			<title>Abstract</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
		<part id="whoarewe">
			<title>About Us</title>
			<slide id="siemenswot">
				<title>Siemens WoT Group</title>
				<div style="float : right ; margin : 3% ">
					<a class="twitter-timeline" data-dnt="true" href="https://twitter.com/SiemensWoT" data-widget-id="528337311138709504">Tweets by @SiemensWoT</a> <script type="text/javascript">!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
				</div> 
				<ul>
					<li><a href="http://www.usa.siemens.com/en/about_us/research/web-of-things.htm">WoT Research Group</a> is part of Siemens' <a href="http://www.usa.siemens.com/en/about_us/research/siemens-in-silicon-valley.htm">Silicon Valley Location</a></li>
					<li>Research into Web and Semantic Web Technologies</li>
					<ul>
						<li>Using web technologies to build loosely coupled ecosystems of services</li>
						<li>Using semantic web technologies to describe resources and services</li>
					</ul>
					<li>We're building a platform for building applications</li>
					<ul>
						<li>This platform is not specific for a fixed set of applications</li>
						<li>We will use it as the platform for (most of) <a href="https://bcourses.berkeley.edu/courses/1293124/assignments">the assignments</a></li>
					</ul>
				</ul>
			</slide>
			<slide id="course-people">
				<title>Course People</title>
				<ul>
					<li>Lecturer: Simon Mayer</li>
					<ul>
						<li>Main focus on Web of Things and interaction with devices</li>
						<li>Austria → Switzerland → US → Switzerland → Berkeley</li>
					</ul>
					<li>Lecturer: Florian Michahelles</li>
					<ul>
						<li>Main focus is bringing Siemens up to Web of Things speed</li>
						<li>Germany → US → Switzerland → Japan → Switzerland → Berkeley</li>
					</ul>
					<li>Lecturer: <a href="http://dret.net/netdret/">Erik Wilde</a></li>
					<ul>
						<li>Main focus is Web Architecture and Web Services</li>
						<li>Associate Professor at School of Information 2006-2011</li>
					</ul>
					<li>TA: Alexander Jones</li>
					<li>Office hours:</li>
					<ul>
						<li>Lecturers: By appointment</li>
						<li>TA: Wednesdays 1-2pm, School of Information first floor atrium</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="syllabus">
			<title>Syllabus</title>
			<slide>
				<title><q>From Things to Knowledge</q></title>
				<ul>
					<li>Connectivity of <q>Things</q> is rapidly spreading</li>
					<ul>
						<li>How get things connected?</li>
						<li>How to build applications based on connected things?</li>
						<li>What are the main problems in a world with more and more connected things?</li>
						<li>Where is value in connecting things? And in the applications?</li>
						<li>How does all of this relate to <q>Big Data</q> and where are overlaps/differences?</li>
						<li>What is the impact on society and culture in such a highly connected world?</li>
					</ul>
					<li>Quite a number of parallels with previous developments</li>
					<ul>
						<li>The <q>Internet of Computers (IoC)</q> which took off with the Web</li>
						<li>The <q>Internet of Mobiles (IoM)</q> which took off with smartphones</li>
					</ul>
					<li>Above everything else, the <em href="https://en.wikipedia.org/wiki/Network_effect">network effect</em> is what matters</li>
					<ul>
						<li>If you're big enough, you can try to create it yourself (a.k.a. <em href="https://en.wikipedia.org/wiki/Closed_platform">walled garden</em>)</li>
						<li>In most cases, you need to be more open to make it happen</li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>Three Main Focus Areas</title>
				<ul>
					<li>Technologies</li>
					<ul>
						<li>Foundations and technical developments</li>
						<li>Architectural issues for massive-scale decentralized systems</li>
					</ul>
					<li>Business</li>
					<ul>
						<li>What are the business drivers/cases for IoT?</li>
						<li>Analyze business cases and look at their <em href="http://en.wikipedia.org/wiki/Business_Model_Canvas">Business Model Canvas</em></li>
					</ul>
					<li>Society</li>
					<ul>
						<li>How will IoT technologies affect individuals and society?</li>
						<li>Where/how can IoT approaches be used to do good?</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="lectures">
			<title>Lectures</title>
			<slide>
				<title>Lecture Format</title>
				<ul>
					<li>Weekly lecture Friday 9.30-11.30, 202 South Hall</li>
					<li>Starting <q>Berkeley Time</q></li>
					<li><em>Lecture attendance is mandatory</em> and we will take attendance</li>
					<ul>
						<li>If you think you have to miss class or lab, let us know</li>
					</ul>
					<li>Two 45min blocks which a brief oxygen/discussion break</li>
					<li>Typically,</li>
					<ul>
						<li>discussing assigned readings at the start of each lecture, and</li>
						<li>discussing the upcoming assignment at the end of the lecture</li>
					</ul>
					<li>If you spot any errors: <a href="https://github.com/dret/lectures/tree/master/iot-spring15">most slides/assignments are on GitHub</a></li>
					<ul>
						<li>Feel free to suggest changes/improvements by email or <a href="https://github.com/dret/lectures/issues">raising an issue</a></li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="readings">
			<title>Readings</title>
			<slide>
				<title>Weekly Assigned Reading</title>
				<ul>
					<li>We will briefly introduce and discuss next week's readings in each lecture</li>
					<li>Each lecture has <em>assigned readings</em> that are mandatory reading before the lecture</li>
					<ul>
						<li>You need to submit a short opinion paper on the reading materials each week</li>
						<li>Opinion papers will be graded</li>
						<li>Opinion papers are supposed to be ~250 word in length</li>
						<li>You have one <q>joker</q> to skip one of those opinion papers</li>
						<li>Due Wednesday night (11:59pm) before the next lecture</li>
						<li>Late policy: -20% on grade per day late</li>
					</ul>
					<li>We will have short discussions about the assigned reading at the start of each lecture</li>
				</ul>
			</slide>
			<slide>
				<title>Additional Resources</title>
				<ul>
					<li>Additional resources for each lecture are listed <a href="./">on the course home page</a></li>
					<li>Intended to give quick access to the most important materials for the lecture</li>
					<li><em>Not required reading</em>, simply intended to be helpful <q>bookmarks</q></li>
					<ul>
						<li>Feel free to suggest additions by <a href="https://github.com/dret/lectures/issues">raising an issue</a></li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="lab">
			<title>Lab</title>
			<slide>
				<title>Got Lab?</title>
				<ul>
					<li>Lab time is Monday 12.30-1.30, 202 South Hall</li>
					<li>Lab time starts February 2nd (i.e., <em>no lab</em> January 26)</li>
					<li>Lab time for support and immediate feedback</li>
					<ul>
						<li>Asking questions by email is not a good way to make progress</li>
					</ul>
					<li><em>Lab attendance is mandatory</em> and we will take attendance</li>
				</ul>
			</slide>
		</part>
		<part id="assignments">
			<title>Assignments</title>
			<slide>
				<title>Build IoT Stuff</title>
				<ul>
					<li>There is a total of <a href="https://bcourses.berkeley.edu/courses/1293124/assignments">9 assignments</a></li>
					<li>Mandatory <link href="lab">lab time</link> for support and group work</li>
					<li>Our goal is to learn to help you build something interesting</li>
					<ul>
						<li>Our goal also is to learn from you while you're doing that</li>
					</ul>
					<li>Late policy: -20% on grade per day late</li>
				</ul>
			</slide>
			<slide id="warmup">
				<title>Assignments: Warming Up</title>
				<ul>
					<li>Submitted and graded individually</li>
				</ul>
				<ol>
					<li><a href="https://bcourses.berkeley.edu/courses/1293124/assignments/6059206">Internet/Web Basics</a></li>
					<li><a href="https://bcourses.berkeley.edu/courses/1293124/assignments/6058676">Mashing Up Things and Services</a></li>
				</ol>
			</slide>
			<slide id="asbase-in-a-slide">
				<title>ASbase</title>
				<ul>
					<li><em href="http://activitystrea.ms/">Activity Streams (AS)</em> are used to connect (social) platforms</li>
					<ul>
						<li>1.0 was never formally standardized or published but implemented in various places</li>
						<li>2.0 is under development in <em href="http://www.w3.org/">W3C</em>'s <em href="http://www.w3.org/Social/WG">Social Web Working Group</em></li>
					</ul>
					<li>Activities are based on actors and what they are doing (verbs)</li>
					<ul>
						<li>Social: <q><em>Florian</em> just <em>shared</em> this <em>Web page</em>.</q></li>
						<li>General: <q><em>AC Transit Bus 666</em> just <em>arrived</em> at <em>Berkeley BART bus station</em>.</q></li>
					</ul>
					<li>Using AS always requires shared understanding of the involved vocabularies</li>
					<ul>
						<li>Otherwise, all you can say is: <q><em>Erik</em> just <em>did something</em> with <em>something</em>.</q></li>
					</ul>
					<li>ASbase is an implementation of AS that supports filtering of AS objects</li>
					<ul>
						<li>Agents can produce and/or consume AS objects which then are managed and stored by ASbase</li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>Sample Activity</title>
				<listing src="post-activity.json" href="http://activitystrea.ms/specs/json/1.0/#examples"/>
			</slide>
			<slide id="project-teams">
				<title>Project Teams</title>
				<ul>
					<li>Project groups are teams of three</li>
					<li>Have a clear plan for how to distribute/share tasks within a team</li>
					<ul>
						<li>Use cases and scenarios development and documentation</li>
						<li>Implementation and testing</li>
						<li>UI design and development</li>
					</ul>
					<li>Project teams can focus on production and/or consumption</li>
					<ul>
						<li>Have at least a minimal plan for both sides of the equation</li>
						<li>Assignments 8&amp;9 will be about mixing scenarios</li>
					</ul>
					<li>We might also be interested in one specific <em>IoT Dashboard</em> team</li>
					<ul>
						<li>No focus on specific activities one the way in our out</li>
						<li>Instead tools and/or UI for testing, monitoring, and generic visualization</li>
					</ul>
				</ul>
			</slide>
			<slide id="project-plan">
				<title>Assignments: Projects</title>
				<ul>
					<li>Submitted and graded per project teams</li>
				</ul>
				<ol start="3">
					<li><a href="https://bcourses.berkeley.edu/courses/1293124/assignments/6063666">Project Proposals</a> (submitted/graded individually)</li>
					<li><a href="https://bcourses.berkeley.edu/courses/1293124/assignments">Project Development</a></li>
					<li><a href="https://bcourses.berkeley.edu/courses/1293124/assignments">Activity Vocabulary Development</a></li>
					<li><a href="https://bcourses.berkeley.edu/courses/1293124/assignments">Getting Data into ASbase</a></li>
					<li><a href="https://bcourses.berkeley.edu/courses/1293124/assignments">Getting Data out of ASbase</a></li>
					<li><a href="https://bcourses.berkeley.edu/courses/1293124/assignments">Mixing Projects: Scenario Mashups</a></li>
					<li><a href="https://bcourses.berkeley.edu/courses/1293124/assignments">Planning and Building the Mashup</a></li>
				</ol>
			</slide>
			<slide id="project-presentations">
				<title>Presentations</title>
				<ul>
					<li>All projects will be presented at the end of the semester</li>
					<li>Project presentations count for 10% of the course grade</li>
					<li>It's more important to have a good project (50%) than to present it well (10%)</li>
				</ul>
			</slide>
			<slide id="project-showcase">
				<title>Showcase</title>
				<ul>
					<li>Project showcase at the end of the semester</li>
					<ul>
						<li>Monday May 11, 3.30-6.30, 202 South Hall</li>
					</ul>
					<li><em>Not</em> part of <link href="grading"/></li>
					<li><em>Attendance mandatory</em> like for all lectures/labs</li>
					<li>Continuing the School of Information's tradition of <em>Building Stuff That Actually Works</em></li>
				</ul>
			</slide>
		</part>
		<part id="grading">
			<title>Grading</title>
			<slide>
				<title>Projects are Important</title>
				<ul>
					<li>Grading is based on a variety of course elements</li>
					<ul>
						<li>Project assignments and results: 50%</li>
						<li>Project presentation: 10%</li>
						<li>Opinion papers about required readings: 15%</li>
						<li>Participation: 15%</li>
						<li><link href="warmup">Warm-up assignments</link>: 10%</li>
					</ul>
					<li>Participation is based on lectures, labs, and showcase</li>
				</ul>
			</slide>
		</part>
	</presentation>
	<presentation id="iot-wot">
		<external link="acl/2015-01-30-IoT-Introduction.pdf" short="IoC to IoT">From the Internet of Computers to the Internet of Things</external>
		<title short="IoT &amp; WoT">Internet of Things (IoT) and Web of Things (WoT): What's WoT?</title>
		<date>2015-01-30</date>
		<author><a href="http://dret.net/netdret/">Erik Wilde</a></author>
		<toc class="reading"><a href="http://www.vs.inf.ethz.ch/publ/papers/Internet-of-things.pdf" title='Friedemann Mattern and Christian Floerkemeier, "From the Internet of Computers to the Internet of Things", In: Kai Sachs, Ilia Petrov, Pablo Guerrero (Eds.): From Active Data Management to Event-Based Systems and More. LNCS, Vol. 6462, Springer, pp. 242-259, 2010'>From IoC to IoT</a>&#160;· <a href="http://www.theatlantic.com/magazine/archive/1945/07/as-we-may-think/303881/" title='Vannevar Bush, "As We May Think", The Atlantic Monthly, 176(1):101-108, July 1945'>As We May Think</a></toc>
		<toc class="resources"><a href="https://www.mnot.net/blog/2014/12/04/what_is_the_web" title="Mark Nottingham's Blog">What is the Web?</a>&#160;· <a href="http://dret.typepad.com/dretblog/2014/07/whats-wot.html" title="Erik Wilde's Blog">What's WoT?</a></toc>
		<toc class="abstract"><em>Internet of Things (IoT)</em> and <em>Web of Things (WoT)</em> have become very popular terms, but with great fame comes great fuzziness. In this lecture we are putting things into perspective, and give one possible definition of the terms IoT and WoT. Understanding <q>the big picture</q> and how IoT/WoT fit in with other popular topics (such as Big Data) is another goal of this lecture.</toc>
		<toc class="assignment"><a href="https://bcourses.berkeley.edu/courses/1293124/assignments/6059206">A1</a>&#160;(2015-02-05)</toc>
		<slide>
			<title>Abstract</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
		<slide>
			<title>Internet? Web? What's the Difference?</title>
			<blockquote>
				<p>The <em>Internet</em> is a global network of interconnected computers that allows connected systems to communicate, regardless of the specifics of system and network implementations.</p>
			</blockquote>
			<blockquote>
				<p>The <em>Web</em> is a distributed hypermedia system that uses the internet as its connective fabric. The most important aspects of the web are its <em>identification mechanism (URI)</em>, its <em>communication protocol (HTTP)</em>, and <em>hypermedia-based media types</em>.</p>
			</blockquote>
		</slide>
		<part id="ioc-wot-evolution">
			<title>IoC/WoC Evolution</title>
			<slide>
				<title>Establishing Connectivity: From Networks to the Internet</title>
				<ul>
					<li>The earliest computers were disconnected computing machinery</li>
					<li>The first computer networks were designed and established <a href="http://en.wikipedia.org/wiki/Computer_network#History">in the 1960s</a></li>
					<li>Proprietary/specific networks (such as <a href="http://en.wikipedia.org/wiki/DECnet">DECnet</a>) were popular until the 1980s</li>
					<li>The internet was invented specifically for <em>interconnecting networks</em></li>
					<ul>
						<li>Started with the <a href="http://en.wikipedia.org/wiki/ARPANET">ARPANET</a> in the late 1960s</li>
						<li>The <a href="http://en.wikipedia.org/wiki/Internet">internet</a> then focused on protocols and not on networks</li>
						<li>Other protocols faded away in favor of TCP/IP's packet switching approach</li>
					</ul>
					<li><q>Internet vs. OSI</q> was a big debate/fight in the late 1980s</li>
					<ul>
						<li>The main differences were purity, complexity, and culture</li>
						<li>Apart from a few select parts, OSI lost and the internet won</li>
					</ul>
					<li>The internet's biggest push was the advent of the web in the early 1990s</li>
				</ul>
			</slide>>
			<slide>
				<title>Historical Internet Traffic (1993-2004)</title>
				<img src="internet-traffic-trends.png" style="height : 65% ; margin : 4% ; " href="http://dret.net/lectures/web-fall10/http#%284%29"/>
			</slide>
			<slide>
				<title>Current Internet Traffic (1H 2014)</title>
				<img src="2014-internet-traffic-sandvine.png" style="height : 65% ; margin : 4% ; " href="https://www.sandvine.com/downloads/general/global-internet-phenomena/2014/1h-2014-global-internet-phenomena-report.pdf"/>
			</slide>
			<slide>
				<title>Providing a Platform: From Walled Gardens to the Web</title>
				<ul>
					<li>The web was the first usable global information system</li>
					<ul>
						<li>Built on protocols rather than on products</li>
						<li>Available at a time when computers started to become mainstream</li>
					</ul>
					<li><em>Web Architecture</em> focuses on three central pillars</li>
					<ol>
						<li><em>Globally Unique Identifiers</em> that allow everybody to refer to available resources (URI)</li>
						<li><em>Uniform Interfaces</em> that can be used to access those resources (HTTP)</li>
						<li><em>Self-Describing Representations</em> that allow clients to <q>understand</q> resources (HTML/XML/JSON/RDF)</li>
					</ol>
				</ul>
			</slide>>
			<slide id="the-web-won">
				<title>Client/Server Lost</title>
				<ul>
					<li>Remote application access went through (roughly) three stages</li>
					<ul>
						<li>Traditional <a href="http://en.wikipedia.org/wiki/Fat_client">fat clients</a> that require specific client-side application code</li>
						<li><a href="http://en.wikipedia.org/wiki/Thin_client">Thin clients</a> that do not require application-specific client-side code</li>
						<ul>
							<li>Typical architectures are remote application access through <a href="http://en.wikipedia.org/wiki/X_Window_System">X11</a> or <a href="http://en.wikipedia.org/wiki/Citrix_XenApp">Citrix</a></li>
							<li>Scalability is a problem because clients use centralized computing resources</li>
						</ul>
						<li>Web Browsers function fundamentally different</li>
						<ul>
							<li>Client-side code is possible but not required (good web apps minimize client code)</li>
							<li>Instead of displaying applications, what matters are representations</li>
							<li>With <a href="https://github.com/dret/HTML5-overview">HTML5</a> progressing, browsers become sophisticated <q>code-on-demand thin clients</q></li>
						</ul>
						<li>In some scenarios, fat and thin clients still make sense</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part>
			<title>The Power of Sharing</title>
			<slide>
				<title>2007: The Smartphone Era</title>
				<ul>
					<li>Sensors have become very affordable</li>
					<li>Connectivity has improved dramatically</li>
					<li>Many information sources (services/sensors) become available every day</li>
					<li>It's a little bit like the golden era of blogs and RSS/Atom</li>
					<ul>
						<li>RSS/Atom feeds were an open way of <a href="http://dret.typepad.com/dretblog/2009/05/atoms-future-as-a-generalpurpose-format.html">making information streams machine-readable</a></li>
						<li><em>Social Platforms</em> took over and quickly crippled/disabled open access</li>
						<li>People today are very accustomed to live in pretty walled gardens</li>
					</ul>
					<li>The Big Question: <q>Will there be a Facebook of IoT/WoT?</q></li>
					<li>For now the ecosystem is still young and developing</li>
				</ul>
			</slide>
			<slide id="shared-identification-model">
				<title>Shared Identification Model</title>
				<ul>
					<li><a href="http://google.com/"><code>http://google.com/</code></a> means the same everywhere</li>
					<ul>
						<li>There is no (relevant) difference in terms of what the URI identifies</li>
						<li>Any ambiguity is created (and hopefully managed) <em>by Google</em></li>
					</ul>
					<li>Possible scenarios where this principle is violated:</li>
					<ul>
						<li>A parallel internet where <code>google.com</code> identifies a different entity</li>
						<li>Intranet applications <q>identified</q> with broken URIs such as <code>http://magicservice/</code></li>
					</ul>
					<li>Useful identification schemes are global in scope and uniqueness</li>
					<ul>
						<li>Not every scheme needs a computer: <a href="tel:+15102061079">Call me!</a></li>
						<li>...or electricity: <a href="geo:37.859544,-122.327007">Meet me here!</a></li>
						<li>...or even identifies a physical resource <a href="urn:isbn:3540642854">Great book!</a></li>
					</ul>
				</ul>
			</slide>
			<slide id="shared-interaction-model">
				<title>Shared Interaction Model</title>
				<ul>
					<li><em>HTTP</em> always works the same (a shared uniform interface)</li>
					<ul>
						<li>Interacting with the resource is possible without knowing it beforehand</li>
						<li>The interaction language <em>only</em> is about making interaction possible and scalable</li>
						<li>The representations being exchanged depend on a <link href="shared-representation-model"/></li>
					</ul>
					<li>Every browser on the planet can access every resource on the planet!</li>
					<li>Other schemes have other (or no) interaction models</li>
					<ul>
						<li><em>ftp:</em> works similar to HTTP (TCP/IP-based access)</li>
						<li><em>tel:</em> is based on a much older global network than the internet</li>
						<li><em>geo:</em> <q>interaction</q> might just mean <q>take me there</q></li>
						<li><em>isbn:</em> has no way to <q>interact</q> with the identified resource</li>
					</ul>
				</ul>
			</slide>
			<slide id="shared-representation-model">
				<title>Shared Representation Model</title>
				<ul>
					<li>HTML works for the human web because of two factors:</li>
					<ul>
						<li>Browsers know how to render a web page so that a human can read it</li>
						<li>There is a <q>hidden shared model</q> of the human language that is published/read</li>
					</ul>
					<li>There are <q>disconnected webs</q> separated by language barriers</li>
					<li><link href="shared-identification-model"/> and <link href="shared-interaction-model"/> are necessary</li>
					<ul>
						<li>But they are not sufficient: without them the web is not possible</li>
						<li>But without a <em>shared representation model</em> there is no shared understanding</li>
					</ul>
					<li>How to establish shared understanding is a very deep problem</li>
				</ul>
			</slide>
		</part>
		<part>
			<title>IoT/WoT Issues</title>
			<slide>
				<title>How To Connect Things</title>
				<ul>
					<li>Constrained devices and networks may require different approaches</li>
					<ul>
						<li>IoT's <q>edges</q> can look very different from IoC</li>
						<li>Low bandwidth and intermittent connectivity are specific IoT issues</li>
						<li>What happens past those edges may not be all that different</li>
					</ul>
					<li>Writing IoT applications requires some understanding of those constraints</li>
					<ul>
						<li>It's similar to the (badly designed) mobile apps that don't work offline</li>
						<li>In mobile it's the apps that go offline, in IoT it's the resources</li>
					</ul>
					<li><q>Core IoT</q> can be a highly specialized development environment</li>
					<li><q>Applied IoT</q> may be able to abstract away <em>most</em> of these problems</li>
				</ul>
			</slide>
			<slide>
				<title>How To Interconnect Things</title>
				<ul>
					<li>Using web architecture to build applications</li>
					<ul>
						<li>The web has become the most successful <q>application layer</q> on the internet</li>
						<li>Not every application using the internet follows the web's architectural model</li>
					</ul>
					<li>IoT scenarios in many cases involve broad and deep scenarios</li>
					<ul>
						<li><em>Broad</em> in the sense that resources come from a variety of sources</li>
						<li><em>Deep</em> in the sense than sensemaking involves a variety of steps</li>
					</ul>
					<li>Ideal IoT application should be open, extensible, and scalable</li>
				</ul>
			</slide>
			<slide>
				<title>What is the <q>Browser of the IoT/WoT</q>?</title>
				<ul>
					<li>Why would it be any different from a <q>regular</q> browser?</li>
					<li>One reasoning is that ii is not controlled by a human</li>
					<ul>
						<li>Imagine programming a browser so that it does what you would do</li>
						<li>In many cases programming such a browser would be hard/impossible</li>
					</ul>
					<li>Richer data/information models help building such a browser</li>
					<ul>
						<li>How to define those is one of the main challenges</li>
					</ul>
				</ul>
			</slide>
		</part>
		<slide>
			<title>Next Week</title>
			<ul>
				<li>Assigned Reading: <a href="http://tools.ietf.org/html/rfc3439">Randy Bush and David Meyer, <q>Some Internet Architectural Guidelines and Philosophy</q>, RFC 3439, December 2002</a></li>
				<li><a href="https://bcourses.berkeley.edu/courses/1293124/assignments/6059206">Assignment 1: Internet/Web Basics</a> (due February 5)</li>
			</ul>
		</slide>
	</presentation>
	<presentation id="layering">
		<title short="Layering">Internet and Web Layering</title>
		<date>2015-02-06</date>
		<author><a href="http://dret.net/netdret/">Erik Wilde</a></author>
		<toc class="reading"><a href="http://tools.ietf.org/html/rfc3439" title='Randy Bush and David Meyer, "Some Internet Architectural Guidelines and Philosophy", RFC 3439, December 2002'>Internet Architecture</a></toc>
		<toc class="resources"><a href="http://en.wikipedia.org/wiki/OSI_model" title="Wikipedia: OSI Model">OSI</a></toc>
		<toc class="abstract">Layering is one of the fundamental abstractions of IT systems and models. One important area where this concept is applied is computer communication networks. As one way how the terms IoT and WoT can be defined and distinguished, it is possible to look at how the internet and the web are layered, how they are related, and how this can be translated into scenarios where resources are real-world resources.</toc>
		<toc class="assignment"><a href="https://bcourses.berkeley.edu/courses/1293124/assignments/6058676">A2</a>&#160;(2015-02-12)</toc>
		<slide>
			<title>Abstract</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
		<part id="networks">
			<title>Computer Networks</title>
			<slide>
				<title>Network History</title>
				<ul>
					<li>First regarded as a convenient workaround for floppy disks</li>
					<ul>
						<li><q>Real computer scientists write compilers</q></li>
						<li>The value of computer networks depends on their size</li>
					</ul>
					<li>Early networking solutions were vendor-specific islands</li>
					<ul>
						<li>DECnet for <em>Digital Equipment Corporation (DEC)</em> customers</li>
						<li>XNS for <em>Xerox</em> customers</li>
						<li>SNA for <em>IBM</em> customers</li>
						<li>transmitting data between these networks was very cumbersome</li>
					</ul>
					<li>Bridging networks transparently became increasingly important</li>
					<ul>
						<li>More computers and networks increase the benefit of interconnections</li>
						<li>Layering being used for internetworks, not only for networks</li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>Networks vs. Internetworks</title>
				<ul>
					<li>Specific networks use specific abstractions</li>
					<ul>
						<li>How to address nodes (computers, phones, PDAs, RFID tags)</li>
						<li>How to address applications on these nodes</li>
						<li>How to transmit data to these applications</li>
					</ul>
					<li>Internetworks provide a network-independent abstraction</li>
					<ul>
						<li>Nodes are addressed uniformly (IP addresses)</li>
						<li>Applications are identified uniformly (ports)</li>
						<li>Data transmission uses one set of protocols (TCP/UDP)</li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>Internet</title>
				<ul>
					<li>Very early start and a lot of experience</li>
					<ul>
						<li>Pragmatic and evolutionary approach</li>
						<li><q>If it's not broken, don't fix it</q></li>
					</ul>
					<li>Standardization by independent technical experts</li>
					<ul>
						<li>Avoids the <q>designed by committee</q> effect of consortiums</li>
						<li>Conservative and concentrating on stability</li>
						<li>Implementations are required to prove technical feasibility</li>
						<li>Simplicity whenever possible</li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>Internet Principles</title>
				<blockquote>Be liberal in what you accept, and conservative in what you send.</blockquote>
				<p class="quotenote"><a href="http://www.postel.org/postel.html">Jon Postel</a>, <a href="http://tools.ietf.org/html/rfc1122">RFC 1122</a></p>
				<blockquote>Whenever possible, communications protocol operations should be defined to occur at the end-points of a communications system, or as close as possible to the resource being controlled.</blockquote>
				<p class="quotenote"><a href="http://dret.net/biblio/reference/sal84">J. Saltzer, D. Reed, D. Clark, <q>End-to-end Arguments in System Design</q></a></p>
			</slide>
			<slide>
				<title>Internet Protocols</title>
				<img style="height : 70% ; margin : 2% ; " src="internet-protocols.png" title="Internet Protocol Layers"/>
			</slide>
			<slide>
				<title>Network Convergence</title>
				<img style="height : 70% ; margin : 2% ; " src="network-convergence.png" title="Convergence in the Protocol Stack"/>
			</slide>
		</part>
		<part id="netlayers">
			<title>Networking Layers</title>
			<slide id="SoC">
				<title>Separation of Concerns (SoC)</title>
				<ul>
					<li>Solving different issues separately is a <em href="http://en.wikipedia.org/wiki/Separation_of_concerns#Origin">Good Idea</em></li>
					<ul>
						<li><q>...a program must be correct...</q></li>
						<li><q>...it should be efficient...</q></li>
						<li><q>...whether, and if so: why, the program is desirable...</q></li>
					</ul>
					<li>Complex solutions need a structured approach for solving them</li>
					<ul>
						<li>Solutions become easier to create</li>
						<li>Parts of solutions may become reusable</li>
						<li>Parts of solutions may become replaceable</li>
					</ul>
					<li>Software engineering hit complexity issues a bit earlier than networking did</li>
					<li>SoC is a good idea but not without costs</li>
					<ul>
						<li><q>Vertical integration</q> allows optimizations not possible in structured designs</li>
						<li><q>Design depends largely on constraints.</q> (<a href="http://en.wikipedia.org/wiki/Charles_and_Ray_Eames">Charles and Ray Eames</a>)</li>
					</ul>
				</ul>
			</slide>
			<slide id="osi-layers">
				<title>OSI Layers</title>
				<img style="height : 70% ; margin : 2% ; " src="osi-model.png" href="http://commons.wikimedia.org/wiki/File:Osi-model.png"/>
			</slide>
			<slide id="layer1">
				<title>Layer 1: Physical</title>
				<div style="height : 70%">
					<img style="height : 90% ; margin : 2% ; " src="antenna-tree.jpg" title="Cellular" href="https://www.flickr.com/photos/33954075@N07/5461958584/"/>
					<img style="height : 90% ; margin : 2% ; " src="public-wifi.jpg" title="Public Wi-Fi" href="https://www.flickr.com/photos/dret/3649149757"/>
					<img style="height : 90% ; margin : 2% ; " src="rj45.jpg" title="Cable Access" href="https://www.flickr.com/photos/30908884@N00/197503286"/>
				</div>
			</slide>
			<slide id="layer2">
				<title>Layer 2: Data Link</title>
				<ul>
					<li>Getting small units of data (frames) safely across layer 1</li>
					<li>Lost/damaged frames are repeated to ensure robustness</li>
					<li>Depending on layer 1, layer 2 frames can have very different sizes</li>
					<ul>
						<li><a href="http://en.wikipedia.org/wiki/Ethernet_frame">Ethernet frames</a> typically have 1500 bytes of payload (and some protocol fields)</li>
						<li>Other networks (such as GSM, CDMA, BLE) use different frame sizes</li>
					</ul>
				</ul>
				<img style="width : 90% ; margin : 2% ; " src="ethernet-frame.png" href="http://commons.wikimedia.org/wiki/File:Ethernet_frame.svg"/>
			</slide>
			<slide id="layer3">
				<title>Layer 3: Network</title>
				<ul>
					<li>Allows addressing at the network level</li>
					<li>For the internet, this means IP addresses</li>
					<ul>
						<li><a href="http://en.wikipedia.org/wiki/IPv4">IPv4</a> is the version that has powered the internet so far</li>
						<li><a href="http://en.wikipedia.org/wiki/IPv6">IPv6</a> is phased in to be able to handle <q>IoT-scale</q> growth</li>
					</ul>
				</ul>
				<img style="width : 90% ; margin : 2% ; " src="IPv4-packet.png" href="http://en.wikipedia.org/wiki/IPv4"/>
			</slide>
			<slide id="layer4">
				<title>Layer 4: Transport</title>
				<ul>
					<li>Layer 3 establishes connectivity on a <em>machine-to-machine</em> level</li>
					<ul>
						<li>Packets can be sent from one machine to another machine</li>
						<li>It is not clear yet what to do with the packet once it arrived</li>
					</ul>
					<li>TCP establishes <em>process-to-process</em> connectivity and reliable connections</li>
				</ul>
				<img style="width : 90% ; margin : 2% ; " src="TCP-structure.png" href="http://en.wikipedia.org/wiki/Transmission_Control_Protocol"/>
			</slide>
			<slide id="layer5">
				<title>Layer 5: Session</title>
				<ul>
					<li>Sessions are meaningful for applications</li>
					<ul>
						<li>TCP connections may or may not terminate (see <a href="http://en.wikipedia.org/wiki/HTTP_persistent_connection">HTTP/1.1 persistent connections</a>)</li>
						<li>Applications should be able to start, pause, restart, and end sessions</li>
					</ul>
					<li>Sessions can be terrible for scalability</li>
					<ul>
						<li>Creating tight coupling between two processes</li>
						<li><a href="rest/">REST</a> tries really hard to build a session-free web (<q>stateless interactions</q>)</li>
					</ul>
					<li>The internet does not really have a generic model for sessions</li>
					<ul>
						<li><em>HTTP Cookies</em> are one way to achieve the same goal (but with a lot of side-effects)</li>
					</ul>
				</ul>
			</slide>
			<slide id="layer6">
				<title>Layer 6: Presentation</title>
				<ul>
					<li>OSI has <em href="http://en.wikipedia.org/wiki/Abstract_Syntax_Notation_One">Abstract Syntax Notation One (ASN.1)</em></li>
					<ul>
						<li>one abstract model and a variety of <q>encoding rules</q> (DER, XER, PER)</li>
						<li>mostly extinct nowadays but still used for <a href="http://en.wikipedia.org/wiki/Public_key_infrastructure">PKI information (certificates)</a></li>
					</ul>
					<li>The internet has media types and some <q>generic</q> data representation languages</li>
					<ul>
						<li><em href="../xml">Extensible Markup Language (XML)</em> was the first successful internet representation</li>
						<li><em href="">JavaScript Object Notation (JSON) replaced XML because most developers like it better</em></li>
						<li><em href="">Resource Description Framework (RDF)</em> is another possible generic data format</li>
					</ul>
				</ul>
			</slide>
			<slide id="layer7">
				<title>Layer 7: Application</title>
				<ul>
					<li>Anything that is built on top of a layered networking stack</li>
					<li>Applications can select (some of the) aspects of the stack</li>
					<ul>
						<li>TCP is often useful because it's reliable and flow-controlled</li>
						<li>UDP may be better for real-time and loss-tolerant data such as video/audio</li>
					</ul>
					<li>Lower layers are completely invisible to applications</li>
					<ul>
						<li>Unless some support and signaling is built into the networking stack</li>
						<li>For example, it can be very interesting to know what traffic costs</li>
					</ul>
					<li>Complete abstraction is a dream, complete control is a nightmare</li>
					<ul>
						<li>Or is it the other way around? It all depends on the scenarios...</li>
						<li>As the internet and applications evolve, networking protocols and features evolve</li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>(Some) Popular Internet Application Protocols</title>
				<ul>
					<li>Domain/Host Name Resolution: DNS</li>
					<li>The Web: <link href="HTTP"/></li>
					<li>Email: SMTP/IMAP</li>
					<li>Chatting: <link href="XMPP"/></li>
					<li>File Transfer: FTP</li>
					<li>Multimedia Traffic: RTP</li>
					<li>Remote Login: Telnet</li>
				</ul>
			</slide>
			<slide>
				<title>Popular Networking Equipment</title>
				<ul>
					<li>Layer 1: Repeaters, Hubs (extending reach)</li>
					<li>Layer 2: Bridges, Switches (selectively <q>repeating</q> frames)</li>
					<li>Layer 3: Routers (using end-to-end addresses)</li>
					<li>Above Layer 4: Gateways</li>
				</ul>
			</slide>
		</part>
		<part id="TCP">
			<title short="TCP">Transmission Control Protocol (TCP)</title>
			<slide>
				<title>TCP Features</title>
				<ul>
					<li>Flow-controlled (avoiding congestion)</li>
					<li>Reliable (no data lost or duplicated)</li>
					<li>Connection-oriented</li>
					<li>Application addressing</li>
				</ul>
			</slide>
			<slide>
				<title>Reliable Connections</title>
				<ul>
					<li>IP may drop or duplicate packets</li>
					<ul>
						<li>TCP adds serial numbers in data packets</li>
						<li>If problems are detected, TCP recovers automatically</li>
					</ul>
					<li>TCP avoids network congestion and system overload</li>
					<ul>
						<li><em>Slow start</em> avoid flooding receivers with data they cannot process</li>
						<li><em>Fast retransmit</em> for avoiding timeouts when losing data</li>
						<li>a <em>Sliding window</em> for controlling the amount of outstanding packets</li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>TCP Window</title>
				<img style="height : 70% ; margin : 2% ; " src="tcp-window.png"/>
			</slide>
		</part>
		<part id="DNS">
			<title short="DNS">Domain Name System (DNS)</title>
			<slide>
				<title>Naming vs. Addressing</title>
				<ul>
					<li>IP addresses depend on network topology and organization</li>
					<ul>
						<li>Reorganizing a network may change all IP addresses</li>
						<li>Identifying important hosts should not be address-based</li>
					</ul>
					<li>Names are supposed to be more stable than addresses</li>
					<ul>
						<li>A name is an abstract identification of something</li>
						<li>Names can be used to obtain more information</li>
					</ul>
					<li>Network services should use names instead of addresses</li>
					<ul>
						<li>Before using the service, a mapping has to be performed</li>
						<li>The <em>Domain Name System (DNS)</em> is providing this service</li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>DNS Properties</title>
				<ul>
					<li>DNS has a bootstrap problem</li>
					<ul>
						<li>DNS provides a service and should thus be identified by a name</li>
						<li>For resolving names into addresses, the DNS service is required</li>
					</ul>
					<li>DNS configuration is part of basic Internet configuration</li>
					<ul>
						<li><em>Dynamic Host Configuration Protocol (DHCP)</em> provides IP address, netmask, gateway, and DNS server address</li>
					</ul>
					<li>DNS names are hierarchically structured</li>
					<ul>
						<li><code>ischool.berkeley.edu</code>, <code>edu</code> is the <em>Top-Level Domain (TLD)</em></li>
						<li>TLDs are either <em>generic (gTLD)</em> or <em>country code (ccTLD)</em></li>
						<li>Subdomains are federated (e.g., <code>edu</code>, <code>us</code>, <code>uk</code>, <code>tv</code>)</li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>Names Matter</title>
				<ul>
					<li>Names are not unique and namespaces are finite</li>
					<ul>
						<li>Name disputes arise which were irrelevant before the Web</li>
						<li><q>cybersquatting</q> as a popular way to make money</li>
					</ul>
					<li>Names can be worth a lot of money</li>
					<ul>
						<li><code>business.com</code> was sold for $7.5M in 1999 and again for $345M in 2007</li>
					</ul>
					<li>Name inflation can be used to generate money</li>
					<ul>
						<li><code>aero</code>, <code>biz</code>, <code>coop</code>, <code>info</code>, <code>jobs</code>, <code>mobi</code>, <code>museum</code>, <code>name</code>, <code>pro</code>, <code>travel</code></li>
						<li>Starting 2014, <a href="http://dret.typepad.com/dretblog/2008/06/dret.html">user-defined top-level domains went on sale</a></li>
					</ul>
					<li>Names can have political significance</li>
					<ul>
						<li>ccTLDs are assigned based on the UNO's idea of what a country is</li>
					</ul>
					<li>Names can have symbolic significance</li>
					<ul>
						<li>Catalonia managed to get a domain of its own (<code>cat</code>)</li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>DNS Name Space</title>
				<img style="height : 70% ; margin : 2% ; " src="dns-namespace.png"/>
			</slide>
			<slide>
				<title>DNS Namespace Organization</title>
				<ul>
					<li>Domain owners can organize the assignment of subdomains</li>
					<ul>
						<li><code href="http://www.berkeley.edu/">berkeley.edu</code> is an U.S. educational institution</li>
						<li><code href="http://www.ethz.ch/">ethz.ch</code> is a Swiss university</li>
						<li><code href="http://www.imperial.ac.uk/">imperial.ac.uk</code> is a British university</li>
						<li><code href="http://www.uts.edu.au/">uts.edu.au</code> is an Australian university</li>
						<li><code href="http://www.swiss.aero/">swiss.aero</code> makes money by selling <q>new land</q></li>
					</ul>
					<li>Special rules may apply (Germany does not assign car license plate names)</li>
					<li>Organizations may be countries or companies</li>
					<ul>
						<li>Countries have national organizations for assigning names</li>
						<li>Companies may create an internal multi-level namespace (<code href="http://www.ischool.berkeley.edu/">www.ischool.berkeley.edu</code>)</li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>Using DNS</title>
				<ul>
					<li>DNS is used by virtually all Internet applications</li>
					<ul>
						<li>Names are more stable than addresses</li>
					</ul>
					<li>E-mail has some dedicated features built into DNS</li>
					<ul>
						<li>Special entries (<code>MX</code> records) identify the e-mail server for a domain</li>
						<li>Fallback entries help dealing with failing e-mail servers</li>
					</ul>
					<li>most URIs are based on DNS names</li>
					<ul>
						<li><code>http://ischool.berkeley.edu/</code> identifies the access protocol and the host</li>
						<li>The browser first performs a DNS lookup</li>
						<li>A TCP connection is then established to the IP address returned by the DNS</li>
					</ul>
				</ul>
			</slide>
		</part>
		<slide>
			<title>Conclusions</title>
			<ul>
				<li>The internet is a network of networks</li>
				<ul>
					<li><a href="http://en.wikipedia.org/wiki/Ted_Stevens">Ted Stevens</a>: <q><a href="http://www.youtube.com/watch?v=f99PcP0aFNE" title="Ted Stevens on the internet">It's not a big truck, it's a series of tubes!</a></q></li>
				</ul>
				<li>The internet provides basic data transfer services</li>
				<li>IP is used to send <em>datagrams</em> between end-points</li>
				<li>TCP is used for reliable communications (building on IP)</li>
				<li>DNS provides human-readable names for Internet hosts</li>
				<li>URI and HTTP establish the web layer on top of the internet</li>
			</ul>
		</slide>
	</presentation>
	<presentation external="acl/2015-02-13-IoT-Business-Aspects.pdf">
		<title short="IoT Business Aspects">Business Aspects of the Internet of Things</title>
		<date>2015-02-13</date>
		<author>Florian Michahelles</author>
		<toc class="abstract">In the previous lectures we have discussed the technical foundations and drivers of the Internet of Things. The purpose of this lecture is to give a brief overview about the business drivers providing the rational of why corporations invest into IoT. We will take a look at some of the business opportunities of the IoT in the industrial domain and within domestic environments.</toc>
		<toc class="reading"><a href="http://www.ptc.com/File%20Library/Topics/Harvard%20Business%20Review/HBR_How-Smart-Connected-Products-Are-Transforming-Competition.pdf" title='Michael E. Porter and James E. Heppelmann, "How Smart, Connected Products Are Transforming Competition", Harvard Business Review, November 2014'>Transforming Competition</a></toc>
		<toc class="resources"><a href="http://www.iot-lab.ch/wp-content/uploads/2014/09/EN_Bosch-Lab-White-Paper-GM-im-IOT-1_1.pdf" title='Elgar Fleisch, Markus Weinberger, and Felix Wortmann, "Business Models for the Internet of Things", Bosch IoT Lab White Paper, August 2014'>Business Models for the IoT</a></toc>
		<toc class="assignment"><a href="https://bcourses.berkeley.edu/courses/1293124/assignments/6063666">A3</a>&#160;(2015-02-17)</toc>
	</presentation>
	<presentation id="rest">
		<title short="REST">Representational State Transfer (REST) and Activity Streams</title>
		<date>2015-02-20</date>
		<author><a href="http://dret.net/netdret/">Erik Wilde</a></author>
		<toc class="reading"><a href="http://www.looah.com/source/view/2284">How I Explained REST to My <del>Wife</del>Parent</a></toc>
		<toc class="resources"><a href="http://www.w3.org/Social/WG" title="W3C Social Web Working Group">W3C&#160;Social&#160;Web&#160;WG</a>&#160;· <a href="http://activitystrea.ms/" title='"Historical" Activity Streams Home Page'>Activity&#160;Streams&#160;1.0</a>&#160;· <a href="http://dret.github.io/W3C/SocialWG/AS1-in-AS2.html" title="Using Activity Streams 1.0 Vocabularies in Activity Streams 2.0">AS1&#160;Vocabulary</a>&#160;· <a href="http://www.iso.org/" title="International Organization for Standardization">ISO</a>&#160;· <a href="http://www.w3.org/" title="World Wide Web Consortium">W3C</a>&#160;· <a href="http://www.ietf.org/" title="Internet Engineering Task Force">IETF</a></toc>
		<toc class="abstract">The Web's architectural style, <em>Representational State Transfer (REST)</em>, is one promising candidate for building open, extensible, and extensible ecosystems of services on the Web. In this picture, Web's fundamental role is that of a Service-Oriented Architecture (SOA), where resources can be accessed as a way to achieve application goals, but their implementation is of no concern to the users of the resources. <em>Activity Streams (AS)</em> are a developing standard that allows the sharing of activities across a variety of application domain. In this lecture the standard is discussed, and we look at specific applications of it in IoT/WoT scenarios.</toc>
		<toc class="assignment"><a href="https://bcourses.berkeley.edu/courses/1293124/assignments">A4</a>&#160;(2015-02-26)</toc>
		<slide>
			<title>Abstract</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
		<part id="rest-definition">
			<title short="REST">Representational State Transfer (REST)</title>
			<slide>
				<title>Architectural Styles</title>
				<ul>
					<li>Architectural Style vs. Architecture</li>
					<ul>
						<li>Architectural Style: General principles informing the creation of an architecture</li>
						<li>Architecture: Designing a solution to a problem according to given constraints</li>
						<li>Architectural styles <em>inform</em> and <em>guide</em> the creation of architectures</li>
					</ul>
				</ul>
				<table width="95%">
					<tr>
						<td>
							<img style="width : 90% ; margin : 2% ; " src="louvre.jpg" title="Louvre Interior"/>
							<ul>
								<li>Architecture: <a href="http://en.wikipedia.org/wiki/Louvre">Louvre</a></li>
								<li>Architectural Style: <a href="http://en.wikipedia.org/wiki/Baroque_architecture">Baroque</a></li>
							</ul>
						</td>
						<td>
							<img style="width : 90% ; margin : 2% ; " src="savoye.jpg" title="Villa Savoye Interior"/>
							<ul>
								<li>Architecture: <a href="http://en.wikipedia.org/wiki/Villa_Savoye">Villa Savoye</a></li>
								<li>Architectural Style: <a href="http://en.wikipedia.org/wiki/International_Style_(architecture)">International Style</a></li>
							</ul>
						</td>
					</tr>
				</table>
			</slide>
			<slide>
				<title>The REST Architectural Style</title>
				<ul>
					<li>A set of constraints that inform an architecture</li>
				</ul>
				<ol>
					<li><link href="identification-constraint"/></li>
					<li><link href="interface-constraint"/></li>
					<li><link href="self-describing-constraint"/></li>
					<li><link href="hypermedia-constraint"/></li>
					<li><link href="stateless-constraint"/></li>
				</ol>
				<ul>
					<li>Claims: scalability, mashup-ability, usability, accessibility</li>
				</ul>
			</slide>
			<slide id="identification-constraint">
				<title>Resource Identification</title>
				<ul>
					<li>Name everything that you want to talk about</li>
					<li><q>Thing</q> in this case should refer to <em>anything</em></li>
					<ul>
						<li><em>Products</em> in an online shop</li>
						<li><em>Categories</em> that are used for grouping products</li>
						<li><em>Customers</em> that are expected to buy products</li>
						<li><em>Shopping carts</em> where customers collect products</li>
					</ul>
					<li><em>Client state transitions</em> also are represented as resources</li>
					<ul>
						<li>Performing a <q>next step</q> is also something you want to talk about</li>
						<li><em>Next</em> links on multi-page submission processes</li>
						<li><em>Paged results</em> with URIs identifying following pages</li>
					</ul>
				</ul>
			</slide>
			<slide id="interface-constraint">
				<title>Uniform Interface</title>
				<ul>
					<li>The same small set of operations applies to <link href="identification-constraint">everything</link></li>
					<li>A small set of <em>verbs</em> applied to a large set of <em>nouns</em></li>
					<li>Verbs are universal and not invented on a per-application base</li>
					<li>If many applications need new verbs, the uniform interface can be extended</li>
					<li>Natural language works in the same way (new verbs rarely enter language)</li>
					<li>Identify operations that are candidates for optimization</li>
					<ul>
						<li><http>GET</http> and <http>HEAD</http> are <em>safe operations</em></li>
						<li><http>PUT</http> and <http>DELETE</http> are <em>idempotent operations</em></li>
						<li><http>POST</http> is the catch-all and can have side-effects</li>
					</ul>
					<li>Build functionality based on useful properties of these operations</li>
				</ul>
			</slide>
			<slide id="self-describing-constraint">
				<title>Self-Describing Messages</title>
				<ul>
					<li>Resources are abstract entities (they cannot be used <em>per se</em>)</li>
					<ul>
						<li><link href="identification-constraint"/> guarantees that they are clearly identified</li>
						<li>They are accessed through a <link href="interface-constraint"/></li>
					</ul>
					<li>Resources are accessed using <em>resource representations</em></li>
					<ul>
						<li>Resource representations are sufficient to represent a resource</li>
						<li>It is communicated which kind of representation is used</li>
						<li>Representation formats can be negotiated between peers</li>
					</ul>
					<li>Resource representations can be based on different constraints</li>
					<ul>
						<li>XML and JSON can represent the same model for different users</li>
						<li>Whatever the representation is, it must <link href="hypermedia-constraint">support links</link></li>
					</ul>
				</ul>
			</slide>
			<slide id="hypermedia-constraint">
				<title>Hypermedia Driving Application State</title>
				<ul>
					<li><link href="self-describing-constraint">Resource representations</link> contain links to <link href="identification-constraint">identified resources</link></li>
					<li>Resources and state can be used by navigating links</li>
					<ul>
						<li>Links make interconnected resources navigable</li>
						<li>Without navigation, identifying new resources is service-specific</li>
					</ul>
					<li>RESTful applications <em>navigate</em> instead of <em>calling</em></li>
					<ul>
						<li><link href="self-describing-constraint">Representations</link> contain information about possible traversals</li>
						<li>The application navigates to the next resource depending on link semantics</li>
						<li>Navigation can be delegated since all links use <link href="identification-constraint">identifiers</link></li>
					</ul>
				</ul>
			</slide>
			<slide id="stateless-constraint">
				<title>Stateless Interactions</title>
				<ul>
					<li>This constraint does not say <q>Stateless Applications</q>!</li>
					<ul>
						<li>For many RESTful applications, state is an essential part</li>
						<li>The idea of REST is to avoid long-lasting transactions <em>in applications</em></li>
					</ul>
					<li>Stateless interactions mean to move state to clients or resources</li>
					<ul>
						<li>The most important consequence: avoid state in server-side applications</li>
					</ul>
					<li><em>Resource state</em> is managed on the server</li>
					<ul>
						<li>It is the same for every client working with the service</li>
						<li>When a client changes resource state other clients see this change as well</li>
					</ul>
					<li><em>Client state</em> is managed on the client</li>
					<ul>
						<li>It is specific for a client and thus has to be maintained by each client</li>
						<li>It may affect <em>access</em> to server resources, but not the resources themselves</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="URI">
			<title short="URI">Uniform Resource Identifier (URI)</title>
			<slide>
				<title>Resource Identification</title>
				<ul>
					<li>Early hypertext systems usually only identified documents within the scope of a single system (e.g. HyperCard)</li>
					<li>The web uses URIs (Uniform Resource Identifiers) as global identifiers</li>
					<ul>
						<li><code href="http://ischool.berkeley.edu/">http://ischool.berkeley.edu/</code></li>
						<li><code href="mailto:alexander.jones@ischool.berkeley.edu">mailto:alexander.jones@ischool.berkeley.edu</code></li>
						<li><code href="tel:+1-510-684-2179">tel:+1-510-684-2179</code></li>
						<li><code href="urn:isbn:0451450523">urn:isbn:0451450523</code></li>
					</ul>
				</ul>
				<blockquote cite="http://www.w3.org/TR/2004/REC-webarch-20041215/#identification">Global naming leads to global network effects... the value of an identifier increases the more it is used consistently</blockquote>
				<p class="quotenote"><a href="http://www.w3.org/TR/webarch/">Architecture of the World Wide Web, Volume One</a></p> 
			</slide>
			<slide>
				<title>URIs &amp; Resources</title>
				<ul>
					<li>A URI identifies a <q>resource</q></li>
					<li>But what is a resource?</li>
					<li>A resource is anything identified by a URI</li>
					<li>Resources are a way of conceptually dividing up some information space</li>
					<li>URIs do not merely identify; (<span title="...but not always...">often</span>) they can be used to access or interact with a resource</li>
					<li>The details of how to do this are determined by the URI scheme, e.g. the <q><code>http:</code></q> part</li>
					<li>The usual method of interacting with a resource is by <em>dereferencing</em> the URI</li>
					<li>The rules for dereferencing are what establishes the scheme's <link href="interface-constraint"/></li>
				</ul>
			</slide>
			<slide id="uri-schemes">
				<title>URI Schemes</title>
				<pre>URI = scheme ":" hier-part [ "?" query ] [ "#" fragment ]</pre>
				<pre>http://dret.net/lectures/iot-spring15/rest#uri-schemes</pre>
				<ul>
					<li>URIs in their general case are very simple</li>
					<ul>
						<li>The scheme identifies how resources are identified</li>
						<li>The identification may be hierarchical or non-hierarchical</li>
					</ul>
					<li>Many URI schemes are hierarchical</li>
					<ul>
						<li>It is then possible to use relative URIs such as in <code href="./">&lt;a href="./"/></code></li>
						<li>The slash character is not just a character, in URIs it has semantics</li>
					</ul>
					<li>Query components specify additional information</li>
					<ul>
						<li>It is non-hierarchical information further identifying the resource</li>
						<li>In most cases, it can be regarded as <q>input</q> to the resource</li>
					</ul>
				</ul>
			</slide>
			<slide id="representation-resource">
				<title>Resources &amp; Representations</title>
				<ul>
					<li>When a URI is dereferenced by a web browser, it receives some data</li>
					<ul>
						<li>In HTTP, that data is accompanied by metadata in the form of HTTP headers</li>
					</ul>
					<li>That data is called a <em>representation</em> of the resource identified by the URI</li>
					<ul>
						<li>One implortant metadata field the the data's <em>media type</em> (HTTP <code>Content-Type</code>)</li>
					</ul>
					<li>Resources are abstract, representations are concrete</li>
					<ul>
						<li>A document can be represented in HTML, PDF, and other representations</li>
					</ul>
					<li>Resources may have various representations, and they may vary with time</li>
				</ul>
			</slide>
		</part>
		<part id="HTTP">
			<title short="HTTP">Hypertext Transfer Protocol (HTTP)</title>
			<slide>
				<title>DNS &amp; HTTP</title>
				<p>The two basic protocols which every Web browser must implement are <link href="DNS">DNS</link> access and <link href="HTTP">HTTP</link>. However, most operating systems provide an API for DNS access, so the browser can use this service locally and only has to implement HTTP. <link href="TCP">TCP</link> support (which is required as the foundation for HTTP) is usually provided by the operating system.</p>
				<img style="width : 90% ; margin : 2% ; " src="browser-dns-http.png"/>
			</slide>
			<slide>
				<title>HTTP Messages</title>
				<ul>
					<li>HTTP needs a reliable connection</li>
					<ul>
						<li>The foundation for HTTP is the <link href="TCP"/></li>
						<li>DNS resolution yields an IP address</li>
						<li>Open TCP connection to port 80 or port specified in URI (<code>http://rosetta.sims.berkeley.edu:8085/</code>)</li>
					</ul>
					<li>HTTP is a <em>text-based</em> protocol</li>
					<ul>
						<li>The connection is used to transmit <em>text messages</em></li>
						<li>All HTTP messages are human-readable (not all <em>entities</em>, though)</li>
						<li>Basic HTTP operations can be carried out by hand (e.g., per <code>telnet</code>)</li>
					</ul>
				</ul>
				<pre>start-line
message-header *

message-body ?</pre>
			</slide>
			<slide id="http-headers">
				<title>HTTP Header Fields</title>
				<ul>
					<li>Header fields contain information about the message</li>
					<ul>
						<li><em>General header:</em> <code>Date</code> as the message origination date</li>
						<li><em>Request header:</em> <code>Accept-Language</code> indicates language preferences</li>
						<li><em>Response header:</em> <code>Server</code> contains system information</li>
						<li><em>Entity header:</em> <code>Content-Type</code> specifies the media type of the entity</li>
					</ul>
					<li>HTTP (and others) define <a href="https://github.com/dret/sedola/blob/master/MD/headers.md">a number of header fields</a></li>
					<ul>
						<li>Unknown fields must be ignored (extensibility)</li>
					</ul>
					<li>HTTP is about acting on these fields</li>
					<ul>
						<li>HTTP defines what HTTP implementations must or should do</li>
					</ul>
				</ul>
			</slide>
			<slide id="http-request">
				<title>HTTP Requests</title>
				<ul>
					<li>After opening a connection, the client sends a request</li>
					<ul>
						<li>The method indicates the action to be performed on the resource</li>
						<li>HTTP's most interesting methods are: <code>GET</code>, <code>POST</code>, <code>PUT</code>, and <code>DELETE</code></li>
					</ul>
					<li>The URI identifies the resource to which the request should be applied</li>
					<ul>
						<li>Absolute URIs are required when contacting <em>proxies</em></li>
						<li>Absolute paths are required when contacting a server directly</li>
						<li>The URI may contain <em>query information</em></li>
					</ul>
					<li>The <code>Host</code> header field must be included in every HTTP/1.1 request</li>
				</ul>
				<pre>Method Request-URI HTTP/Major.Minor
[Header]*

[Entity]?</pre>
			</slide>
			<slide id="http-get">
				<title>HTTP GET</title>
				<ul>
					<li>Retrieval action based on the URI</li>
					<ul>
						<li>Maybe implemented by reading a file</li>
						<li>Maybe implemented by processing a file (PHP)</li>
						<li>Maybe implemented by running code</li>
					</ul>
					<li>Semantics may change based on header fields</li>
					<ul>
						<li><code>If-*:</code> only reply with the entity if necessary</li>
						<li><code>Range:</code> only reply with the requested part of the entity</li>
					</ul>
					<li>Cacheability depends on header fields of the response</li>
				</ul>
				<pre>GET / HTTP/1.1
Host: ischool.berkeley.edu</pre>
			</slide>
			<slide id="http-response">
				<title>HTTP Responses</title>
				<ul>
					<li>The server's response to acting on a request</li>
					<ul>
						<li>the status code is given numerically and as text</li>
						<li><code>2**</code> for variations of <q>ok</q></li>
						<li><code>3**</code> for redirections</li>
						<li><code>4**</code> are different client side problems (<code>404</code>: not found)</li>
						<li><code>5**</code> are different server side problems</li>
					</ul>
					<li>Header fields specify additional information</li>
					<ul>
						<li>Information about the server</li>
						<li>Information about the entity (media type, encoding, language)</li>
					</ul>
				</ul>
				<pre>HTTP/Major.Minor Status-Code Text
[Header]*

[Entity]?</pre>
			</slide>
			<slide id="http-performance">
				<title>HTTP Performance</title>
				<ul>
					<li>HTTP/1.0 allowed one transaction per connection</li>
					<ul>
						<li>TCP connection setup and teardown are expensive</li>
						<li>TCP's <em>slow start</em> slows down the initial phase of data transfer</li>
						<li>Typical Web pages use between 10-20 resources (HTML + images + CSS + scripts)</li>
						<li>Typically, these resources are stored on the same server</li>
					</ul>
					<li>HTTP/1.1 introduces <em>persistent connections</em></li>
					<ul>
						<li>The TCP connection stays open for some time (10 sec is a popular choice)</li>
						<li>Additional requests to the same server use the same TCP connection</li>
					</ul>
					<li>HTTP/1.1 introduces <em>pipelined connections</em></li>
					<ul>
						<li>Instead of waiting for a response, requests can be queued</li>
						<li>The server responds as fast as possible</li>
						<li>The order may not be changed (there is no sequence number)</li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>HTTP Connection Handling</title>
				<img style="width : 90% ; margin : 2% ; " src="http-phttp-pipelining.png"/>
			</slide>
			<slide>
				<title>HTTP Access Control</title>
				<ul>
					<li>HTTP servers can <a href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#4xx_Client_Error">deny access</a> because of access control</li>
					<ul>
						<li><code>401 Unauthorized</code> means the resource is access controlled</li>
						<li><code>403 Forbidden</code> means the resource is inaccessible</li>
						<li><code>405 Method Not Allowed</code> signals a request using the wrong <link href="http-request">request method</link></li>
					</ul>
					<li>Two different approaches to unauthorized access are possible</li>
					<ul>
						<li>Repeat the HTTP request with the proper authentication credentials</li>
						<li>Redirect to a <q>authentication resource</q> for authentication</li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>HTTP Authentication</title>
				<img style="width : 90% ; margin : 2% ; " src="authentication-http.gif" title="HTTP Authentication" href="http://java.sun.com/j2ee/1.4/docs/tutorial/doc/Security5.html"/>
			</slide>
			<slide id="http-basic">
				<title>Basic HTTP Authentication</title>
				<ul>
					<li>Authentication is based on <em>authentication realms</em></li>
					<ul>
						<li>A set of resources for which the authentication is required</li>
						<li>An opaque name which is used to signal which login is required</li>
						<li>Username/password often is specific for a given realm</li>
					</ul>
					<li>Users supply username and password through the client</li>
					<ul>
						<li>Sent as <a href="http://en.wikipedia.org/wiki/Base64">Base64</a> encoded <q><code>username:password</code></q> string</li>
						<li>Username and password are <a href="http://www.google.com/search?hl=en&amp;q=base64+decoder"><em>not</em> transmitted securely</a></li>
						<li>Basic authentication should <em>always</em> use HTTPS</li>
					</ul>
					<li>Authorization is handled on the server side</li>
					<pre href="http://en.wikipedia.org/wiki/Basic_access_authentication">HTTP/1.0 401 Unauthorized
WWW-Authenticate: Basic realm="SokEvo"</pre>
					<pre href="http://en.wikipedia.org/wiki/Basic_access_authentication">GET /private/index.html HTTP/1.0
Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</pre>
				</ul>
			</slide>
			<slide>
				<title>Repeated Access</title>
				<ul>
					<li>Clients typically access more than one protected resource</li>
					<ul>
						<li>A perfectly stateless client would always request authentication from the user</li>
						<li>Using the <em>realm</em> clients can identify repeated accesses to sets of resources</li>
					</ul>
					<li>Web interactions by default are perfectly stateless</li>
					<ul>
						<li>Each request is completely independent from other requests</li>
						<li>Stateless interactions make the Web loosely coupled and scalable</li>
						<li>Concepts like the <em>realm</em> or cookies introduce <q>state</q></li>
					</ul>
					<li>Clients remember the authentication and replay it automatically</li>
					<ul>
						<li>Browsers provide little control over this feature</li>
						<li><q>Logging out</q> of HTTP authenticated sessions is hard</li>
					</ul>
				</ul>
			</slide>
			<slide id="login-page">
				<title>Login Page</title>
				<ul>
					<li><link href="http-basic"/> works with browser controls (including the login window)</li>
					<ul>
						<li>No possibility to <q>log out</q> without using browser-specific controls</li>
						<li>Client side security depends on browser security measures</li>
					</ul>
					<li>Using forms gives more freedom in session management</li>
					<ul>
						<li>Authentication and authorization are completely application-based</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="as-basics">
			<title>Activity Streams Basics</title>
			<slide id="AS1">
				<title>Activity Streams 1.0</title>
				<ul>
					<li>Developer effort in an attempt to <q>interconnect social networks</q></li>
					<ul>
						<li>Counter-intuitive given then <q>walled garden</q> nature of most social networks</li>
						<li>Even the <q>social giants</q> need proper plumbing between their services</li>
					</ul>
					<li>Simple and informative standard that was implemented but never (fully) documented</li>
					<ul>
						<li>Some parts of the <q>specification</q> did not see good support in implementations</li>
					</ul>
					<li><q>Enterprise 2.0</q> customers demand stable and official standards</li>
					<ul>
						<li><em>Social Enterprise Platforms</em> are essentially integration platforms</li>
						<li>Only robust and open models turn them into good IT solutions</li>
					</ul>
				</ul>
			</slide>
			<slide id="AS2">
				<title>Activity Streams 2.0</title>
				<ul>
					<li><link href="AS1"/> were successful but not a very solid specification</li>
					<li><q>Social Networks</q> are increasingly important for Enterprise IT</li>
					<ul>
						<li>Enterprises slowly but increasingly understand the necessity for loose coupling</li>
						<li><a href="http://en.wikipedia.org/wiki/Enterprise_social_networking">Enterprise Social Networking</a> has a lot of potential</li>
						<li>Deploying one centralized infrastructure repeats errors of the past</li>
						<li>The alternative idea is to interconnect heterogeneous systems</li>
					</ul>
					<li>Large Enterprise IT providers have pushed for AS to become more mature</li>
					<ul>
						<li>IBM uses AS for interconnecting products for <a href="http://en.wikipedia.org/wiki/Application_lifecycle_management">software lifecycle management</a></li>
						<li>SAP uses AS in their enterprise collaboration tools</li>
						<li>Customers demand for those platforms to be open and extensible</li>
					</ul>
					<li>AS2 is now being standardized in the <a href="http://www.w3.org/" title="World Wide Web Consortium">W3C</a>'s <a href="http://www.w3.org/Social/WG" title="Social Web Working Group">Social Web WG</a></li>
					<ul>
						<li><a href="http://www.w3.org/TR/activitystreams-core/">Activity Streams 2.0</a></li>
						<li><a href="http://www.w3.org/TR/activitystreams-vocabulary/">Activity Vocabulary</a></li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="as-vocabularies">
			<title>Vocabularies for Activity Streams</title>
			<slide>
				<title>AS needs Vocabularies</title>
				<ul>
					<li>AS is about activities and needs shared understanding</li>
					<ul>
						<li>Without a vocabulary, it is a grammar without content</li>
						<li>Vocabularies allow to build meaningful sentences with shared meaning</li>
					</ul>
					<li>Basic AS statement: <q><code>Erik added a picture to Flickr</code></q></li>
					<ul>
						<li>Actor: <code>Erik</code></li>
						<li>Verb: <code>add</code></li>
						<li>Object: <code href="https://www.flickr.com/photos/dret/15433487108/">picture URI</code></li>
						<li>Target: <code href="https://www.flickr.com/photos/dret/">Flickr stream URI</code></li>
					</ul>
					<li>AS mixes three ways in how these concepts can be represented</li>
					<ul>
						<li><em>By Value:</em> The actor's name is <q>Erik</q> (good for simple rendering)</li>
						<li><em>By Registry Reference:</em> The well-known verb is <a href="http://dret.github.io/W3C/SocialWG/AS1-in-AS2.html#verb-definition-add">add</a> (good for shared meaning)</li>
						<li><em>By URI Reference:</em> Erik's <a href="https://www.flickr.com/photos/dret/">Flickr Photostream</a> (good for extensibility)</li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>Use, Extend, or Define?</title>
				<ul>
					<li>AS has three <q>levels</q> of verb expressivity</li>
				</ul>
				<ol>
					<li>Using a well-known verb in the way how it has been defined</li>
					<ul>
						<li><q>Erik just added something to an existing resource.</q></li>
					</ul>
					<li>Extending a well-known verb in ways that make sense for those knowing the extension</li>
					<ul>
						<li><q>For those who know and care, here is additional info about the camera.</q></li>
					</ul>
					<li>Defining new verbs which do not <q>mean</q> anything for those not knowing them</li>
					<ul>
						<li><q>Erik just edited the picture he added earlier.</q></li>
					</ul>
				</ol>
			</slide>
			<part id="as-vocab-use">
				<title>Using Vocabularies</title>
				<slide>
					<title>Finding Vocabularies</title>
					<img src="snowflakes.jpg" href="http://atompub.org/" style="float : right ; width : 25% ; margin : 0.5em 1em 1em 1em ; "/>
					<ul>
						<li>There is no centralized registry of AS vocabularies</li>
						<ul>
							<li>The AS1 core specification only defines the one verb <q><code>post</code></q></li>
							<li>The <a href="https://github.com/activitystreams/activity-schema/blob/master/activity-schema.md">AS1 base schema</a> defines a set of well-known verbs</li>
							<li>AS1 activities may use verbs other than the well-know ones</li>
							<li><a href="http://activitystrea.ms/specs/json/1.0/#extensions">Extensions</a> can use <em>strings</em> or <em>URIs</em> as verbs (the difference is unclear)</li>
						</ul>
						<li>Everybody is free to define their own snowflakes</li>
						<ul>
							<li>Network effect gains depend on agreement on the level of shared understanding</li>
							<li><em>Only</em> invent something if you absolutely have to</li>
						</ul>
					</ul>
				</slide>
				<slide>
					<title>Adapting Vocabularies</title>
					<ul>
						<li>Consider this when designing the activities for your course project!</li>
						<li>Reuse an existing activity type (they are loosely defined)</li>
						<li>Add facets to it that you need to satisfy your use case</li>
						<li>Adapting without hijacking is the litmus test of proper reuse</li>
						<ul>
							<li>If somebody does not support your extensions, does it still make sense?</li>
							<li>If this test cannot be satisfied, it is better to invent something new</li>
						</ul>
					</ul>
				</slide>
			</part>
			<part id="as-vocab-define">
				<title>Defining Vocabularies</title>
				<slide>
					<title>Quantified Self and Health</title>
					<ul>
						<li>Using data from wearables to support personal well-being and health</li>
						<ul>
							<li>Producers: Wearables (e.g., activity trackers), general-purpose devices (e.g., activity-enabled smartphones), lab visits</li>
							<li>Transformers: Consuming available data and distilling reports</li>
							<li>Consumers: Users, health coaches, doctors (different granularity of consumption)</li>
						</ul>
						<li>Data production should be independent of specific devices</li>
						<ul>
							<li><a href="https://github.com/dret/exercise/tree/master/EDF">Exercise Data Format (EDF)</a> as a very simple <q>standard</q> for exercise data</li>
							<li>The resources are linked from activities and use a different media type</li>
						</ul>
					</ul>
				</slide>
				<slide>
					<title>Hey, I Just <code>Exercised</code></title>
					<ul>
						<li>The current design exposes <em>exercising</em> as an activity</li>
						<ul>
							<li>It would also be possible to model it as <q>adding something to an exercise log</q></li>
							<li>Modeling always has many ways how the same information can be represented</li>
						</ul>
						<li>Specific <em>exercise types</em> (e.g., running) are not part of the verb</li>
						<ul>
							<li>Trade-off between generality and specificity</li>
							<li>The exercise type is represented as additional data in the AS object</li>
						</ul>
					</ul>
				</slide>
				<slide>
					<title>Do You Know What <code>HIIT</code> Is?</title>
					<ul>
						<li>Exercise types are considered relevant but not central</li>
						<ul>
							<li><a href="https://github.com/dret/exercise/blob/master/types/API/nikefuel.md">Nike Fuel</a> thinks <code>HIIT</code> is a thing</li>
							<li>Even <a href="http://en.wikipedia.org/wiki/High-intensity_interval_training">Wikipedia thinks it is a thing</a></li>
						</ul>
						<li>It is possible to transform proprietary into unified types</li>
						<ul>
							<li>There is a long list of <a href="https://github.com/dret/exercise/tree/master/types">(currently 435) exercise types</a></li>
							<li>Consumers are mostly not interested which device/service created the exercise data</li>
							<li>A transformer consumes the proprietary types and transforms them into unified types</li>
						</ul>
						<li>A typical pattern of open and extensible system</li>
						<ul>
							<li>Define a minimal but useful model for representing what the system is all about</li>
							<li>Make this model extensible and open so that it can <em>evolve</em> without breaking existing components</li>
						</ul>
					</ul>
				</slide>
			</part>
		</part>
	</presentation>
	<presentation external="acl/2015-02-27-IoT-MakingThingsSmart.pdf">
		<title short="Connectivity">Connecting Things: Getting Things onto the Internet</title>
		<date>2015-02-27</date>
		<author>Simon Mayer</author>
		<toc class="abstract">The purpose of this lecture is to give an overview of key technologies for connecting (smart) devices to the Internet (and the Web!). We will talk about specific classes of capabilities of devices that we want to bring to the IoT and discuss a few technologies that bring formerly dumb devices to "life."</toc>
		<toc class="reading"><a href="http://dl.acm.org/citation.cfm?id=1164130" title='A. Halevy, A. Rajaraman, and J. Ordille: "Data integration: The Teenage Years", Proceedings of the 32nd International Conference on Very Large Data Bases, pages 9-16, 2006.'>Data Integration</a></toc>
		<toc class="resources">
			<a href="http://en.wikipedia.org/wiki/Radio-frequency_identification" title="Wikipedia: Radio-Frequency Identification (RFID)">RFID</a>&#160;· 
			<a href="http://en.wikipedia.org/wiki/Energy_harvesting">Energy Harvesting</a>
		<toc class="assignment"><a href="https://bcourses.berkeley.edu/courses/1293124/assignments">A5</a>&#160;(2015-03-05)</toc>
	</presentation>
	<presentation id="business-cases">
		<title short="Business Cases">Business Cases &amp; Concepts</title>
		<date>2015-03-06</date>
		<author>Florian Michahelles</author>
		<toc class="reading"><a href="http://www.ee-iese.com/102/ingles/pdf/subirana.pdf" title='Brian Subirana, Sanjay Sarma, and Elgar Fleisch, "High-Resolution Management". IESE Alumni Magazine, 8–13, July/September 2006'>High-Resolution Management</a></toc>
		<toc class="assignment"><a href="https://bcourses.berkeley.edu/courses/1293124/assignments">A6</a>&#160;(2015-03-19)</toc>
				<slide>
					<title>Abstract</title>
					<p class="abstract"><toc class="abstract"/></p>
				</slide>
	</presentation>
	<presentation id="business-models">
		<title short="Business Models">Business Issues and Models</title>
		<date>2015-03-13</date>
		<slide>
			<title>Abstract</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
	</presentation>
	<presentation id="persuasive">
		<title short="Persuasive">Persuasive Technologies &amp; Behavioral Change</title>
		<date>2015-03-20</date>
		<toc class="assignment"><a href="https://bcourses.berkeley.edu/courses/1293124/assignments">A7</a>&#160;(2015-04-09)</toc>
		<slide>
			<title>Abstract</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
	</presentation>
	<presentation id="protocols">
		<title short="Protocols">IoT Communication Protocols</title>
		<date>2015-04-03</date>
		<toc class="resources"><a href="http://xmpp.org/" title="XMPP Standards Foundation">XMPP.org</a>&#160;· <a href="http://www.amqp.org/" title="AMQP Home Page">AMQP.org</a>&#160;· <a href="http://www.mqtt.org/" title="MQTT Home Page">MQTT.org</a>&#160;· <a href="http://www.webrtc.org/" title="WebRTC Home Page">WebRTC.org</a>&#160;· <a href="https://code.google.com/p/pubsubhubbub/" title="PuSH on Google Code">PuSH</a>&#160;· <a href="https://tools.ietf.org/html/rfc6455" title="RFC 6455: The WebSocket Protocol">WebSocket</a></toc>
		<toc class="abstract">In this lecture we are looking at both lower layer (CoAP) and specific messaging protocols (AMQP, MQTT, XMPP), as examples of how specific requirements in application areas have resulted in a variety of network and application protocols. The main challenge in this space is to not compare protocols feature-by-feature, but to understand what they do and do not cover, and what they have been designed for.</toc>
		<slide>
			<title>Abstract</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
		<slide>
			<title>So/Too Many Protocols</title>
		</slide>
		<slide id="hammer-screw">
			<title>People And Hammers</title>
			<img src="hammer-screw.jpg" title="If you've never seen a screw it looks a lot like a nail." style="height : 65% ; margin : 4% ; "/>
		</slide>
		<part id="XMPP">
			<title short="XMPP">Extensible Messaging Protocol (XMPP)</title>
			<slide>
				<title>XMPP History</title>
				<img src="xmpp-logo.png" href="http://xmpp.org/" style="float : right ; width : 20% ; margin-top : 0.5em ; margin-right : 2em ; "/>
				<ul>
					<li>Originally named <q>Jabber</q> and intended as an <em>open chat protocol</em></li>
					<ul>
						<li>Most chat systems are using closed and proprietary protocols</li>
						<li>XMPP allows an open ecosystem of chat services and clients to evolve</li>
					</ul>
					<li>Main development within IETF from 2002-2004</li>
					<li>XML was en vogue back then so the protocol is XML-based</li>
					<ul>
						<li>The entire client/server session is one XML document (a <a href="http://tools.ietf.org/html/rfc6120#section-4">stream</a></li>
						<li><q>Stream children</q> are XMPP's protocol data units (a <a href="http://tools.ietf.org/html/rfc6120#section-8">stanza</a></li>
						<li>XMPP <a href="http://tools.ietf.org/html/rfc6120#section-11">restricts XML</a> so that parsing is a bit simpler</li>
					</ul>
					<li>XMPP is specified as a generic core and an IM protocol</li>
					<ul>
						<li><a href="http://tools.ietf.org/html/rfc6120">XMPP Core (RFC 6120)</a></li>
						<li><a href="http://tools.ietf.org/html/rfc6121">XMPP Instant Messaging and Presence (RFC 6121)</a></li>
						<li><a href="http://tools.ietf.org/html/rfc6122">XMPP Address Format (RFC 6122)</a></li>
					</ul>
				</ul>
			</slide>
			<slide>
				<title>XMPP Example</title>
				<listing src="xmpp-session.txt" href="http://tools.ietf.org/html/rfc3920#section-4.8"/>
			</slide>
			<slide>
				<title>Presence Information</title>
				<ul>
					<li><em>Presence information</em> is a critical part of every IM experience</li>
				</ul>
			</slide>
		</part>
		<part id="websocket">
			<title>WebSocket</title>
			<slide>
				<title>Non-HTTP Internet Connectivity</title>
				<img src="websockets-logo.png" href="http://xmpp.org/" style="float : right ; width : 20% ; margin-top : 0.5em ; margin-right : 2em ; "/>
				<ul>
					<li><a href="">XMLHttpRequest</a></li>
					<li>WebSocket is both an API and a Protocol</li>
					<ul>
						<li>IETF publishes the <a href="https://tools.ietf.org/html/rfc6455">WebSocket Protocol</a></li>
						<li>W3C publishes the <a href="http://www.w3.org/TR/websockets/">WebSocket API</a></li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="AMQP">
			<title short="AMQP">Advanced Message Queueing Protocol (AMQP)</title>
			<slide>
				<title>...</title>
				<img src="amqp-logo.jpg" href="http://xmpp.org/" style="float : right ; width : 20% ; margin-top : 0.5em ; margin-right : 2em ; "/>
			</slide>
		</part>
		<part id="MQTT">
			<title short="MQTT">Message Queue Telemetry Transport (MQTT)</title>
		</part>
		<part id="WebRTC">
			<title short="WebRTC">Web Real Time Communications (WebRTC)</title>
			<slide>
				<title>Is WebRTC a Protocol?</title>
				<ul>
					<li>It started as an API, but network APIs without protocols make little sense</li>
					<li>Currently two organizations are working on WebRTC</li>
					<ul>
						<li>W3C is developing the <a href="http://www.w3.org/TR/webrtc/">WebRTC API</a> (how to use WebRTC in JavaScript)</li>
						<li>IETF is developing <a href="http://datatracker.ietf.org/wg/rtcweb/documents/" title="Documents of the IETF WebRTC WG">WebRTC protocols</a> so that browsers can communicate</li>
					</ul>
				</ul>
			</slide>
		</part>
		<part id="PuSH">
			<title short="PuSH">PubSubHubbub (PuSH)</title>
			<slide>
				<title>Push as a Pattern</title>
				<ul>
					<li>PuSH changed significantly between <a href="http://pubsubhubbub.googlecode.com/svn/trunk/pubsubhubbub-core-0.3.html">0.3</a> and <a href="https://superfeedr-misc.s3.amazonaws.com/pubsubhubbub-core-0.4.html">0.4</a></li>
				</ul>
			</slide>
		</part>
	</presentation>
	<presentation id="big-data-semweb">
		<title short="Big Data &amp; Semantics">Big Data and Semantic Technologies</title>
		<date>2015-04-10</date>
		<author><a href="http://dret.net/netdret/">Erik Wilde</a></author>
		<toc class="resources"><a href="http://www.w3.org/2013/data/" title="W3C Data Activity: Building the Web of Data">W3C&#160;SemWeb</a>&#160;· <a href="http://www.ischool.berkeley.edu/newsandevents/events/20140226yingding" title='Ying Ding: "Connecting Big Data Semantics", Special Talk at the School of Information'>Connecting Big Data Semantics</a></toc>
		<toc class="abstract">One certainty of IoT is that the amount of data will increase even more dramatically, which means that sensemaking and filtering become more important. Two successful but currently mostly disconnected ways to deal with this are <em>Big Data</em> and the <em>Semantic Web</em>. This lecture looks at both approaches and presents their main value propositions and fundamental methods and tools.</toc>
		<toc class="assignment"><a href="https://bcourses.berkeley.edu/courses/1293124/assignments">A8</a>&#160;(2015-04-16)</toc>
		<slide>
			<title>Abstract</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
	</presentation>
	<presentation id="iot-wild">
		<title>IoT in the Wild</title>
		<date>2015-04-17</date>
		<toc class="abstract">...</toc>
		<toc class="assignment"><a href="https://bcourses.berkeley.edu/courses/1293124/assignments">A9</a>&#160;(2015-04-30)</toc>
		<slide>
			<title>Abstract</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
	</presentation>
	<presentation id="implications">
		<title short="Implications">Implications for Society</title>
		<date>2015-04-24</date>
		<toc class="abstract">...</toc>
		<slide>
			<title>Abstract</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
	</presentation>
	<presentation id="projects">
		<title short="Presentations">Project Presentations</title>
		<date>2015-05-01</date>
		<toc class="abstract">...</toc>
		<slide>
			<title>Abstract</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
	</presentation>
	<presentation id="summary">
		<title short="Summary">Course Summary</title>
		<date>2015-05-08</date>
		<toc class="abstract">...</toc>
		<slide>
			<title>Abstract</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
	</presentation>
	<presentation id="showcase">
		<title short="Showcase">Course Summary</title>
		<date>2015-05-11</date>
		<toc class="abstract">...</toc>
		<slide>
			<title>Abstract</title>
			<p class="abstract"><toc class="abstract"/></p>
		</slide>
	</presentation>
</hotspot>
